name: Deploy Hotfix (.NET)

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  build_and_test:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'hotfix/')
    uses: ./.github/workflows/verify-dotnet.yml
    with:
      dotnet_version: '9.0.x'

  determine-new-tag: 
    needs: build_and_test
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.versioning.outputs.new_tag }}
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine new patch tag
        id: versioning
        run: |
          echo "üîç Getting latest valid semantic version tag..."
          git fetch --tags
          latest_tag=$(git tag --list 'v*' | sort -V | tail -n 1)
          if [ -z "$latest_tag" ]; then
            latest_tag="v0.0.0"
          fi
          echo "Latest tag: $latest_tag"
          version=${latest_tag#v}
          IFS='.' read -r major minor patch <<< "$version"
          patch=$((patch + 1))
          new_tag="v$major.$minor.$patch"
          echo "New patch tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Use new version
        run: echo "The new tag is ${{ steps.versioning.outputs.new_tag }}"

  commit-tag-bump:
    needs: determine-new-tag
    uses: ./.github/workflows/commit-tag-bump.yml
    with:
      new_tag: ${{ needs.determine-new-tag.outputs.new_tag }}

  build_and_push_image:
    needs: [commit-tag-bump, determine-new-tag]
    uses: ./.github/workflows/build-push-image.yml
    with:
      image_tag: ${{ needs.determine-new-tag.outputs.new_tag }}
      environment: production
    secrets: inherit

  export_vars:
    needs: [build_and_push_image, determine-new-tag]
    runs-on: ubuntu-latest
    environment: production
    outputs:
      AWS_REGION: ${{ steps.vars.outputs.AWS_REGION }}
      QA_SQS_QUEUE_URL: ${{ steps.vars.outputs.QA_SQS_QUEUE_URL }}
      REMARKETING_SERVICE_QUEUE_URL: ${{ steps.vars.outputs.REMARKETING_SERVICE_QUEUE_URL }}
      QA_PROCESS_TABLE: ${{ steps.vars.outputs.QA_PROCESS_TABLE }}
      USER_TABLE: ${{ steps.vars.outputs.USER_TABLE }}
      MAX_NUM_PROCESSES: ${{ steps.vars.outputs.MAX_NUM_PROCESSES }}
      IMAGE: ${{ steps.vars.outputs.IMAGE }}

    steps:
      - id: vars
        run: |
          echo "AWS_REGION=${{ vars.AWS_REGION }}" >> $GITHUB_OUTPUT
          echo "QA_SQS_QUEUE_URL=${{ vars.QA_SQS_QUEUE_URL }}" >> $GITHUB_OUTPUT
          echo "REMARKETING_SERVICE_QUEUE_URL=${{ vars.REMARKETING_SERVICE_QUEUE_URL }}" >> $GITHUB_OUTPUT
          echo "QA_PROCESS_TABLE=${{ vars.QA_PROCESS_TABLE }}" >> $GITHUB_OUTPUT
          echo "USER_TABLE=${{ vars.USER_TABLE }}" >> $GITHUB_OUTPUT
          echo "MAX_NUM_PROCESSES=${{ vars.MAX_NUM_PROCESSES }}" >> $GITHUB_OUTPUT
          echo "IMAGE=${{ vars.ECR_REPO }}:${{ needs.determine-new-tag.outputs.new_tag }}" >> $GITHUB_OUTPUT
      
  deploy_to_ecs:
    needs: [export_vars, build_and_push_image]
    uses: ./.github/workflows/deploy-ecs.yml
    with:
      image: ${{ needs.export_vars.outputs.IMAGE }}
      environment: development
      environment_variables: |
        AWS_REGION=${{ needs.export_vars.outputs.AWS_REGION }}
        QA_SQS_QUEUE_URL=${{ needs.export_vars.outputs.QA_SQS_QUEUE_URL }}
        REMARKETING_SERVICE_QUEUE_URL=${{ needs.export_vars.outputs.REMARKETING_SERVICE_QUEUE_URL }}
        ASPNETCORE_ENVIRONMENT=Development
        QA_PROCESS_TABLE=${{ needs.export_vars.outputs.QA_PROCESS_TABLE }}
        USER_TABLE=${{ needs.export_vars.outputs.USER_TABLE }}
        MAX_NUM_PROCESSES=${{ needs.export_vars.outputs.MAX_NUM_PROCESSES }}
    secrets: inherit


  propagate-changes:
    needs: [deploy_to_ecs]
    uses: ./.github/workflows/merge-workflow.yml
    with: 
      target_branch: develop
      source_branch: main
    